// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package main.proxies;

public class Address
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject addressMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Main.Address";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Streetname("Streetname"),
		StreetNumber("StreetNumber"),
		Zipcode("Zipcode"),
		City("City"),
		Country("Country"),
		AddressSummary("AddressSummary");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Address(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Main.Address"));
	}

	protected Address(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject addressMendixObject)
	{
		if (addressMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Main.Address", addressMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Main.Address");

		this.addressMendixObject = addressMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Address.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static main.proxies.Address initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return main.proxies.Address.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static main.proxies.Address initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new main.proxies.Address(context, mendixObject);
	}

	public static main.proxies.Address load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return main.proxies.Address.initialize(context, mendixObject);
	}

	public static java.util.List<main.proxies.Address> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<main.proxies.Address> result = new java.util.ArrayList<main.proxies.Address>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Main.Address" + xpathConstraint))
			result.add(main.proxies.Address.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Streetname
	 */
	public final java.lang.String getStreetname()
	{
		return getStreetname(getContext());
	}

	/**
	 * @param context
	 * @return value of Streetname
	 */
	public final java.lang.String getStreetname(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Streetname.toString());
	}

	/**
	 * Set value of Streetname
	 * @param streetname
	 */
	public final void setStreetname(java.lang.String streetname)
	{
		setStreetname(getContext(), streetname);
	}

	/**
	 * Set value of Streetname
	 * @param context
	 * @param streetname
	 */
	public final void setStreetname(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String streetname)
	{
		getMendixObject().setValue(context, MemberNames.Streetname.toString(), streetname);
	}

	/**
	 * @return value of StreetNumber
	 */
	public final java.lang.String getStreetNumber()
	{
		return getStreetNumber(getContext());
	}

	/**
	 * @param context
	 * @return value of StreetNumber
	 */
	public final java.lang.String getStreetNumber(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.StreetNumber.toString());
	}

	/**
	 * Set value of StreetNumber
	 * @param streetnumber
	 */
	public final void setStreetNumber(java.lang.String streetnumber)
	{
		setStreetNumber(getContext(), streetnumber);
	}

	/**
	 * Set value of StreetNumber
	 * @param context
	 * @param streetnumber
	 */
	public final void setStreetNumber(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String streetnumber)
	{
		getMendixObject().setValue(context, MemberNames.StreetNumber.toString(), streetnumber);
	}

	/**
	 * @return value of Zipcode
	 */
	public final java.lang.String getZipcode()
	{
		return getZipcode(getContext());
	}

	/**
	 * @param context
	 * @return value of Zipcode
	 */
	public final java.lang.String getZipcode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Zipcode.toString());
	}

	/**
	 * Set value of Zipcode
	 * @param zipcode
	 */
	public final void setZipcode(java.lang.String zipcode)
	{
		setZipcode(getContext(), zipcode);
	}

	/**
	 * Set value of Zipcode
	 * @param context
	 * @param zipcode
	 */
	public final void setZipcode(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String zipcode)
	{
		getMendixObject().setValue(context, MemberNames.Zipcode.toString(), zipcode);
	}

	/**
	 * @return value of City
	 */
	public final java.lang.String getCity()
	{
		return getCity(getContext());
	}

	/**
	 * @param context
	 * @return value of City
	 */
	public final java.lang.String getCity(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.City.toString());
	}

	/**
	 * Set value of City
	 * @param city
	 */
	public final void setCity(java.lang.String city)
	{
		setCity(getContext(), city);
	}

	/**
	 * Set value of City
	 * @param context
	 * @param city
	 */
	public final void setCity(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String city)
	{
		getMendixObject().setValue(context, MemberNames.City.toString(), city);
	}

	/**
	 * @return value of Country
	 */
	public final java.lang.String getCountry()
	{
		return getCountry(getContext());
	}

	/**
	 * @param context
	 * @return value of Country
	 */
	public final java.lang.String getCountry(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Country.toString());
	}

	/**
	 * Set value of Country
	 * @param country
	 */
	public final void setCountry(java.lang.String country)
	{
		setCountry(getContext(), country);
	}

	/**
	 * Set value of Country
	 * @param context
	 * @param country
	 */
	public final void setCountry(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String country)
	{
		getMendixObject().setValue(context, MemberNames.Country.toString(), country);
	}

	/**
	 * @return value of AddressSummary
	 */
	public final java.lang.String getAddressSummary()
	{
		return getAddressSummary(getContext());
	}

	/**
	 * @param context
	 * @return value of AddressSummary
	 */
	public final java.lang.String getAddressSummary(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.AddressSummary.toString());
	}

	/**
	 * Set value of AddressSummary
	 * @param addresssummary
	 */
	public final void setAddressSummary(java.lang.String addresssummary)
	{
		setAddressSummary(getContext(), addresssummary);
	}

	/**
	 * Set value of AddressSummary
	 * @param context
	 * @param addresssummary
	 */
	public final void setAddressSummary(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String addresssummary)
	{
		getMendixObject().setValue(context, MemberNames.AddressSummary.toString(), addresssummary);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return addressMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final main.proxies.Address that = (main.proxies.Address) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Main.Address";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
